(function(){function a(){function a(a){if(a)for(var b=0;b<a.length;b++)a[b].textContent=""}this.reset(),this.removeAttribute("data-state");var b=this.querySelector(".form.validated");b&&b.classList.remove("validated"),a(this.querySelectorAll("span[data-bind]")),a(this.querySelectorAll("output[data-bind]"));var c=this.querySelectorAll("[data-disabled]");if(c)for(var d=0;d<c.length;d++)c[d].setAttribute("disabled","disabled");var e=this.querySelectorAll("[data-not-disabled]");if(e)for(var d=0;d<e.length;d++)e[d].removeAttribute("disabled","disabled");var f=this.querySelectorAll("[data-id]");if(f)for(var d=0;d<f.length;d++)delete f[d].dataset.id;var g=this.querySelectorAll("[data-fade]");if(g)for(var d=0;d<g.length;d++)g[d].classList.add("fade");var h=this.querySelectorAll("[type=\"hidden\"]:not([data-block])");[].slice.call(h,function(a){a.value=""});var j=this.querySelector("button[data-accion]");j&&j.removeAttribute("data-accion")}function b(){if(!this.checkValidity()){for(var a,b,c=this.querySelectorAll(".form"),d=0;d<c.length;d++)b=c[d].querySelector(":invalid"),a=a||b,b&&!c[d].classList.contains("active")&&f.apply(c[d].querySelector("header h4")),c[d].classList.add("validated");return a&&a.focus(),!1}return!0}function c(){for(var a=this,b=a.querySelectorAll("[data-no-disabled]"),c=0;c<b.length;c++)b[c].setAttribute("data-no-disabled","active"),b[c].setAttribute("disabled","")}function d(a){var b,c=this,d=c.querySelectorAll("[data-bind]");if(0!=d.length){b={};for(var e=0;e<d.length;e++)"input"==d[e].tagName.toLowerCase()?"radio"==d[e].type.toLowerCase()?d[e].checked&&(b[d[e].dataset.bind]=d[e].value):"checkbox"==d[e].type.toLowerCase()?b[d[e].dataset.bind]=!!d[e].checked:"file"==d[e].type.toLowerCase()?b[d[e].dataset.bind]=d[e].file:b[d[e].dataset.bind]=d[e].value:b[d[e].dataset.bind]=d[e].value;if(a){var f=[];for(var e in b)f.push(b[e]);return f}return b}}function e(b){var c=this;for(var d in b){var f=c.querySelectorAll("[data-bind=\""+d+"\"]");if(f[0])if("radio"==f[0].getAttribute("type")){var g;[].slice.call(f).filter(function(a){a.value.toString()==b[d].toString()&&(g=a)}),g&&(g.checked=!0)}else if("checkbox"==f[0].getAttribute("type"))for(var h=0;h<f.length;h++)for(var i=0;i<b[d].length;i++)f[h].value==b[d][i]&&(f[h].checked=!0);else if("file"==f[0].getAttribute("type"))continue;else if(f[0].fnGet){var j=f[0].bind,k=f[0].db.length?f[0].db:[f[0].db],l=k.fnFind(function(a){return a[j.id]==b[d]});f[0].value=l[j.text],f[0].dataset.id=b[d]}else f[0].value=b[d]}}function f(a,b,c){a=a||this;var d=a.parentNode.parentNode;c&&(d=a);var f=d.querySelector("fieldset ul"),g=d.querySelector("h4");c||(d.classList.contains("active")&&!b?d.classList.remove("active"):!d.classList.contains("active")&&(d.classList.add("active"),d.setAttribute("data-active",""),setTimeout(function(){d.removeAttribute("data-active")},500)));var h=d.classList.contains("active");f.style.marginTop=h?"0px":"-"+(f.offsetHeight+g.offsetHeight)+"px"}this.form=function(g){g.clean=a,g.isValid=b,g.setNoDisabled=c,g.set=e,g.get=d,f(g,!1,!1),g.querySelector("h4").addEventListener("click",function(){f(this)},!1),g.querySelector("ul").addEventListener("click",function(){f(this,!0)},!1)},this.showForm=f,this.initButtons=function(a){a&&!a.length&&(a=[a]);for(var b=a||document.querySelectorAll("a.button, button.button"),c=0;c<b.length;c++)b[c].addEventListener("click",function(a){a.preventDefault();var b,c,e,f,g=$(this);b=g.find(".circle"),b.height()||b.width()||(c=Math.max(g.outerWidth(),g.outerHeight()),b.css({height:c,width:c})),e=a.pageX-g.offset().left-b.width()/2,f=a.pageY-g.offset().top-b.height()/2,b.css({top:f+"px",left:e+"px"}),b.addClass("animate"),setTimeout(function(){b.removeClass("animate")},700)},!1)},this.isDate=this.isDate||new RegExp(/(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})/),this.isNull=this.isNull||/^null$/,this.isTrue=this.isTrue||/^true$/,this.isFalse=this.isFalse||/^false$/,this.isZero=this.isZero||/^0$/,this.isHour=this.isHour||new RegExp(/^(0[1-9]|1\d|2[0-3]):([0-5]\d):([0-5]\d)$/)}).apply(jr.addNS("jforms"));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
