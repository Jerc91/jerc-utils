(function(){function a(a){function c(){var b,c,a=Math.round;q.slideElement=q.slideElement||document.querySelector(r.qSlide),q.firstChild=r.firstChild||q.slideElement.querySelector(":scope > li:first-child"),q.firstChild.handlerTransitionEnd=q.firstChild.handlerTransitionEnd||h.bind(q,q),q.firstChild.handlerTransitionStart=q.firstChild.handlerTransitionStart||g.bind(q,q),q.firstChild.removeEventListener("transitionend",q.firstChild.handlerTransitionEnd,!1),q.firstChild.removeEventListener("transitionstart",q.firstChild.handlerTransitionStart,!1),q.firstChild.addEventListener("transitionend",q.firstChild.handlerTransitionEnd,!1),q.firstChild.addEventListener("transitionstart",q.firstChild.handlerTransitionStart,!1),r.qWrapper?r.contenedorSlideElement=q.contenedorSlideElement=q.contenedorSlideElement||document.querySelector(r.qWrapper):(r.contenedorSlideElement=q.contenedorSlideElement=q.contenedorSlideElement||q.slideElement.parentNode,c=r.contenedorSlideElement.getAttribute("class"),c=c.includes(" ")?c.substring(0,c.indexOf(" ")):c,b=r.contenedorSlideElement.tagName+(c?"."+c:""),r.qSlide=b+" "+r.qSlide),r.width&&(q.width=r.width),r.count=q.slideElement.children.length||r.list,r.active=!1,r.elementsFade=r.count>r.maxElementsShow?r.count-r.maxElementsShow:0,r.leftToRight=r.leftToRight||!1,r.rangeNumber=d(r.count),r.name=r.name||q.name||++j,r.widthElements=a(r.width/r.maxElementsShow),s.push(r.qSlide+" > li { transition-duration: "+r.speedAnimation+"ms; transition-timing-function: "+r.timingFunction+"; }"),q.qSlide=r.qSlide,q.rangeNumber=r.rangeNumber,q.speedAnimation=r.speedAnimation,q.leftToRight=r.leftToRight,q.maxElementsShow=r.maxElementsShow,q.name=r.name,q.count=r.count,q.elementsFade=r.elementsFade}function e(){r.manualWidth?([].slice.call(document.querySelectorAll(r.qSlide+" > li")).forEach(function(a){var b=a.getBoundingClientRect().width;r.maxWidth+b<r.width?r.maxWidth+=b:r.maxWidth+b>=r.width&&(r.elementos.push(r.maxWidth),r.maxWidth=0)}),q.count=r.elementos.length):s.push(r.qSlide+" > li { min-width:"+r.widthElements+"px; }")}function i(){for(var a,c,d,e,f="transform: translateX(-",g=0;g<q.count;g++)a=g+1,c=1<q.count&&(a+g==q.count||a==q.count),d=" li:nth-child("+(a+1)+") ",r.manualWidth?r.manualWidth&&(e=f+r.elementos[g]+"px);",s.push(r.qSlide+".a"+a+" > li {"+e+"}"),r.countFadeElements++):q.elementsFade>r.countFadeElements&&!r.leftToRight?(e=f+r.widthElements*(q.elementsFade-a)+"%);",s.push(r.qSlide+".a"+a+" > li {"+e+"}"),r.countFadeElements++):g<r.elementsFade&&r.leftToRight&&(e=f+r.widthElements*a+"px);",2==r.animation?s.push(r.qSlide+".a"+a+" > "+d+" {"+e+"}"):s.push(r.qSlide+".a"+a+" > li {"+e+"}"))}function l(){var a=r.qSlide+":not([class*=\"a\"]) > li:not(:first-child),";for(var b=1;b<q.count;b++)a+=r.qSlide+".a"+b+" > li:not(:nth-child("+(1+b)+")),";a=a.substring(0,a.length-1),a+="{ max-height: 0; opacity: 0; overflow: hidden; }",s.push(a)}function m(){r.buttons&&(r.btnLeft=q.btnLeft=r.contenedorSlideElement.querySelector(".btnLeft"),r.btnRight=q.btnRight=r.contenedorSlideElement.querySelector(".btnRight"),r.btnLeft&&r.btnRight&&(r.btnLeft.classList.remove("disabled"),r.btnRight.classList.remove("disabled"),r.leftToRight?r.btnLeft.classList.add("disabled"):r.btnRight.classList.add("disabled"),q.handlerLeft=q.handlerLeft||q.left.bind(q),q.handlerRight=q.handlerRight||q.right.bind(q),r.btnLeft.removeEventListener("click",q.handlerLeft,!1),r.btnRight.removeEventListener("click",q.handlerRight,!1),r.btnLeft.addEventListener("click",q.handlerLeft,!1),r.btnRight.addEventListener("click",q.handlerRight,!1)))}function n(){var a,b,c=[" init-jslide{0%{left:"+(r.leftToRight?"-":"")+"100%;opacity:0;}100%{left:0;opacity:1;}}",`${r.qSlide}.init > li { animation: init-jslide 2s ease; width: 100%; }`].join("");r.leftToRight?a=r.maxElementsShow*r.widthElements-(r.leftToRight?q.elementsFade*r.widthElements:0):(a=q.elementsFade*r.widthElements-(r.leftToRight?r.maxElementsShow*r.widthElements:0),a*=0>=a?-1:1),b="transform: translateX(-"+a+"px);",s.push(q.qSlide+" > li { "+b+" }"),s.push("@keyframes"+c),q.slideElement.classList.add("init"),r.active=!0,setTimeout(function(){q.slideElement.removeClass("init"),r.active=!1},r.speedAnimation)}function o(a){jr.tagScriptLink({href:URL.createObjectURL(new Blob(s,{type:"text/css; charset=\"utf-8\""})),type:"css",name:"jslide-"+r.name,repeatTag:!0,referenceTag:!0}).then(function(){var c=document.querySelectorAll("link[data-name=\"jslide-"+r.name+"\"]");2<=c.length&&c[0].parentNode.removeChild(c[0]),q.slideElement.setAttribute("class",q.slideElement.getAttribute("class").replace(/a\d+/,"")),b(0,q),r=null,s=null,a()})}function p(){q.withTouch&&(q.touchHandler=q.touchHandler||function(a){f(a,q)}.bind(q),q.slideElement.removeEventListener("touchstart",q.touchHandler,!1),q.slideElement.removeEventListener("touchend",q.touchHandler,!1),q.slideElement.addEventListener("touchstart",q.touchHandler,!1),q.slideElement.addEventListener("touchend",q.touchHandler,!1))}var q=this,r=Object.assign(q,k,a),s=[];return q.active=!0,q.promise=new Promise((a,b)=>{try{c(),r.width||1<r.maxElementsShow?(e(),i(),m(),1==q.maxElementsShow&&l(),r.animations&&n(),o(a),p()):(q.slideElement.classList.add("pme"),m(),p(),a())}catch(a){b(a)}}).catch(jr.fnErrorHandler),q.promise.then(()=>q.firstChild.dispatchEvent(new HashChangeEvent("transitionend"))),q}function b(a,b){var c,d,e=b,f=e.manualWidth?e.count:e.elementsFade,g=e.qWrapper;if(e.leftToRight?(c=e.btnLeft,d=e.btnRight):(c=e.btnRight,d=e.btnLeft),c&&d)return-1==a||a==-1*e.maxElementsShow?(c.classList.add("disabled"),!0):(0==a?(c.classList.add("disabled"),d.classList.remove("disabled")):(c.classList.remove("disabled"),d.classList.add("disabled")),a>f)?(d.classList.add("disabled"),!0):(a==f?d.classList.add("disabled"):d.classList.remove("disabled"),!1)}function c(a){var b=a,c=e("[a]"+b.rangeNumber,b.slideElement.getAttribute("class"))||"a0",d=parseInt(e(b.rangeNumber,c));b.active=!1,b.activeSlide=document.querySelector(b.qSlide+" > li:nth-child("+(d+1)+")"),jr.execFunction(b.callback,b.activeSlide)}function d(a){for(var b="([0-9]{",c=1;c<=a.toString().length;c++)b+=c+",";return(b+="})").replace(",}","}")}function e(a,b){var c=new RegExp(a),d=c.exec(b);return d?d[0]:d}function f(a,b){if(a.changedTouches.length){var c,d=a.changedTouches[0],e=b;switch(a.type){case"touchstart":e.pageX=d.pageX;break;case"touchmove":break;case"touchend":c=d.pageX-e.pageX,e.pageX<d.pageX&&300<=c&&e.right(),e.pageX>d.pageX&&-300>=c&&e.left(),e.pageX=0;}}}function g(a,b){a.firstChild.isEqualNode(b.target)&&(a.active=!0)}function h(a,b){a.firstChild.isEqualNode(b.target)&&c(a)}function i(b){return new a(b)}var j=0,k={leftToRight:!0,maxElementsShow:1,withTouch:!1,pageX:0,timingFunction:"cubic-bezier(.4, 0, .2, 1)",speedAnimation:250,buttons:!0,countFadeElements:0,elementos:[],maxWidth:0};a.prototype.left=function(){var a=this,c=a.slideElement,d=e("[a]"+a.rangeNumber,c.getAttribute("class"))||"a0",f=parseInt(e(a.rangeNumber,d))-a.maxElementsShow;return a.active?a:(a.promise.then(()=>b(f,a)?a:(c.classList.remove(d),f<a.count&&c.classList.add("a"+f),a)),a)},a.prototype.right=function(){var a=this,c=a.slideElement,d=e("[a]"+a.rangeNumber,c.getAttribute("class"))||"a0",f=parseInt(e(a.rangeNumber,d))+(a.manualWidth?1:a.maxElementsShow);return a.active?a:(a.promise.then(()=>b(f,a)?a:void(c.classList.remove(d),0<f&&c.classList.add("a"+f))),a)},a.prototype.moveTo=function(a){var c=this,d=c.slideElement,f=e("[a]"+c.rangeNumber,d.getAttribute("class"));return b(a,c),d.classList.remove(f),0<a&&d.classList.add("a"+a),c},a.prototype.then=function(a){var b=this;return b.active?b.callback=a:a(),b},a.prototype.resize=function(a){var b=this;return b.promise.then(()=>{i(Object.assign(b,a))}),b},jr.addNS("jslide",i)})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
